async function fetchCrops() {
    const response = await fetch('/crops');
    const crops = await response.json();
    const cropList = document.getElementById("crop-list");
    cropList.innerHTML = "";

    crops.forEach((crop, index) => {
        const row = document.createElement("tr");

        row.innerHTML = `
            <td>${crop["Local Name"]}</td>
            <td>${crop["Category"]}</td>
            <td>${crop["Seasonality"]}</td>
            <td>${crop["Item Code"]}</td>
            <td>${crop["Year"]}</td>
            <td>${crop["Flag Description"]}</td>
            <td>${crop["Harvest Date"]}</td>
            <td>${crop["Quantity"]}</td>
            <td>
                <button onclick="editCrop(${index})">Edit</button>
                <button onclick="deleteCrop(${index})">Delete</button>
            </td>
        `;
        cropList.appendChild(row);
    });
}

// Add a new crop
async function addCrop() {
    const crop = {
        local_name: document.getElementById("localName").value,
        category: document.getElementById("category").value,
        seasonality: document.getElementById("seasonality").value,
        item_code: parseInt(document.getElementById("itemCode").value),
        year: document.getElementById("year").value,
        flag_description: document.getElementById("flagDescription").value,
        harvest_date: document.getElementById("harvestDate").value,
        quantity: parseInt(document.getElementById("quantity").value)
    };

    await fetch('/crops', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(crop)
    });

    fetchCrops();
}

// Delete a crop
async function deleteCrop(index) {
    await fetch(`/crops/${index}`, { method: 'DELETE' });
    fetchCrops();
}

// Fetch crops when the page loads
window.onload = fetchCrops;

// Function to handle editing a crop
function editCrop(index) {
    // Here you can implement your edit logic based on the index
    const crop = crops[index]; // Assuming you have the crops array accessible

    // Populate the form fields with crop data for editing
    document.getElementById('localName').value = crop.local_name;
    document.getElementById('category').value = crop.category;
    document.getElementById('seasonality').value = crop.seasonality;
    document.getElementById('itemCode').value = crop.item_code;
    document.getElementById('year').value = crop.year;
    document.getElementById('flagDescription').value = crop.flag_description;
    document.getElementById('harvestDate').value = crop.harvest_date;
    document.getElementById('quantity').value = crop.quantity;

    // Set the index to edit
    editIndex = index;

    // Show the form
    document.getElementById('add-crop-form').style.display = 'block';
}
async function fetchDropdownOptions() {
    const response = await fetch('/dropdown-options');
    const options = await response.json();

    // Populate Category Dropdown
    const categorySelect = document.getElementById("category");
    options.categories.forEach(category => {
        const option = document.createElement("option");
        option.value = category;
        option.textContent = category;
        categorySelect.appendChild(option);
    });

    // Populate Seasonality Dropdown
    const seasonalitySelect = document.getElementById("seasonality");
    options.seasonality.forEach(season => {
        const option = document.createElement("option");
        option.value = season;
        option.textContent = season;
        seasonalitySelect.appendChild(option);
    });

    // Populate Flag Description Dropdown
    const flagSelect = document.getElementById("flagDescription");
    options.flag_descriptions.forEach(flag => {
        const option = document.createElement("option");
        option.value = flag;
        option.textContent = flag;
        flagSelect.appendChild(option);
    });
}

// Fetch dropdown options when the page loads
window.onload = async function() {
    await fetchDropdownOptions();
    fetchCrops();
};
